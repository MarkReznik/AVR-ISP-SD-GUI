;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;interrupt [14] void timer_comp_isr(void)
; 0000 005E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 005F /* re-initialize Timer1 */
; 0000 0060 TCNT1H=t1_init_h;//T1_INIT>>8;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0061 TCNT1L=t1_init_l;//T1_INIT&0xFF;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0062 /* card access low level timing function */
; 0000 0063 #ifndef PETITFATFS
; 0000 0064 disk_timerproc();
; 0000 0065 #endif
; 0000 0066 /* the rest of the interrupt service routine */
; 0000 0067 /* .... */
; 0000 0068 if(++Counter100Hz>20){//(1/2000=0.5m) 0.5ms*20=10ms
;PCODE: $00000013 VOL: 1
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 1
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0069 Counter100Hz=0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 1
; 0000 006A Counter10ms++;
;PCODE: $0000001A VOL: 1
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 006B 
; 0000 006C if(StandaloneMode==IDLE){
;PCODE: $0000001E VOL: 1
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 006D #ifdef PRINT_LCD
; 0000 006E LED_PASS_OFF();
; 0000 006F LED_ERR_OFF();
; 0000 0070 #else
; 0000 0071 #ifdef SEG7
; 0000 0072 if(DisableNextDir==FALSE){
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0073 if(++CounterLed>=60){  //300ms
;PCODE: $00000023 VOL: 1
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 1
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0074 CounterLed=0;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 1
; 0000 0075 show7seg(dirnum);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0076 }
; 0000 0077 else if(CounterLed==30){
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 1
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0078 init7seg();
;PCODE: $00000032 VOL: 0
; 0000 0079 }
; 0000 007A }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 007B else
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 007C show7seg(dirnum);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 007D #else
; 0000 007E if(++CounterLed>=30){  //300ms
; 0000 007F CounterLed=0;
; 0000 0080 if(CounterToggles<=(dirnum<<1)){
; 0000 0081 LED_PASS_TGL();
; 0000 0082 }
; 0000 0083 else if(CounterToggles>=((dirnum<<1)+9)){
; 0000 0084 CounterToggles=0;
; 0000 0085 }
; 0000 0086 else{
; 0000 0087 LED_PASS_OFF();
; 0000 0088 }
; 0000 0089 CounterToggles++;
; 0000 008A }
; 0000 008B #endif
; 0000 008C #endif
; 0000 008D }
;PCODE: $0000003A VOL: 0
; 0000 008E else if(StandaloneMode==RUNNING){
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 1
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 008F if(++CounterLed>=3){  //30ms
;PCODE: $00000040 VOL: 1
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 1
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0090 CounterLed=0;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 1
; 0000 0091 LED_ERR_OFF();
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0092 LED_PASS_TGL();
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0093 }
; 0000 0094 }
;PCODE: $00000053 VOL: 0
; 0000 0095 else if(StandaloneMode==PASS){
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 1
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0096 LED_PASS_ON();
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0097 LED_ERR_OFF();
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0098 #ifdef SEG7
; 0000 0099 //show7seg('P');
; 0000 009A #endif
; 0000 009B }
; 0000 009C else if(StandaloneMode==FAIL){
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 1
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 009D LED_PASS_OFF();
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 009E if(++CounterLed>=60){
;PCODE: $00000064 VOL: 1
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 1
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 009F CounterLed=0;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 1
; 0000 00A0 LED_ERR_TGL();
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00A1 #ifdef SEG7
; 0000 00A2 //show7seg('E');
; 0000 00A3 #endif
; 0000 00A4 if(StopEvent==0)
;PCODE: $00000075 VOL: 1
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00A5 DoBeeps(3,1,1);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00A6 }
;PCODE: $0000007F VOL: 0
; 0000 00A7 #ifdef PRINT_LCD
; 0000 00A8 if(StopEvent==0){
; 0000 00A9 if(TestADCs()==(1<<BUTTON_STOP)){
; 0000 00AA StopEvent=1;
; 0000 00AB CanBeep=0;
; 0000 00AC }
; 0000 00AD }
; 0000 00AE #endif
; 0000 00AF }
;PCODE: $00000080 VOL: 0
; 0000 00B0 else if(StandaloneMode==SDFAIL){
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 1
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00B1 LED_PASS_OFF();
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 00B2 if(++CounterLed>=100){
;PCODE: $00000088 VOL: 1
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 1
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00B3 CounterLed=0;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 1
; 0000 00B4 LED_ERR_TGL();
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 00B5 #ifdef SEG7
; 0000 00B6 show7seg('E');
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00B7 #endif
; 0000 00B8 }
; 0000 00B9 else if(CounterLed==50){
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 1
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00BA #ifdef SEG7
; 0000 00BB init7seg();
;PCODE: $000000A1 VOL: 0
; 0000 00BC #endif
; 0000 00BD }
; 0000 00BE }
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00BF else if(StandaloneMode==READSD){
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 1
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00C0 LED_PASS_OFF();
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00C1 LED_ERR_OFF();
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00C2 #ifdef SEG7
; 0000 00C3 show7seg('-');
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00C4 #endif
; 0000 00C5 if(++CounterLed>=100){
;PCODE: $000000B0 VOL: 1
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 1
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00C6 CounterLed=0;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 1
; 0000 00C7 //LED_ERR_TGL();
; 0000 00C8 }
; 0000 00C9 }
;PCODE: $000000B7 VOL: 0
; 0000 00CA //        if(msg_buf_cnt && (CanChangeMsg==0)){
; 0000 00CB //            if( (++CounterMsg>=50)){
; 0000 00CC //                CounterMsg=0;
; 0000 00CD //                CanChangeMsg=1;
; 0000 00CE //            }
; 0000 00CF //        }
; 0000 00D0 }
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00D1 
; 0000 00D2 if((StandaloneMode!=RUNNING)&&CanBeep){
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 1
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 1
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00D3 if((Counter100Hz%2)==0){//1ms cnt
;PCODE: $000000C9 VOL: 1
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00D4 if(cnt_beep_ms){
;PCODE: $000000CF VOL: 1
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00D5 cnt_beep_ms--;
;PCODE: $000000D2 VOL: 1
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 1
; 0000 00D6 if(cnt_beep_ms==0){
;PCODE: $000000D5 VOL: 1
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00D7 if(cnt_beep_times){
;PCODE: $000000D8 VOL: 1
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00D8 cnt_beep_times--;
;PCODE: $000000DB VOL: 1
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 1
; 0000 00D9 cnt_beep_delay_ms=beep_delay_ms;
;PCODE: $000000DE VOL: 1
;PCODE: $000000DF VOL: 0
; 0000 00DA }
; 0000 00DB }
;PCODE: $000000E0 VOL: 0
; 0000 00DC if(cnt_beep_tone){
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 1
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00DD cnt_beep_tone--;
;PCODE: $000000E5 VOL: 1
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 1
; 0000 00DE if(cnt_beep_tone==0){
;PCODE: $000000E8 VOL: 1
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 00DF BUZ_TGL();
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 00E0 cnt_beep_tone=beep_tone;
;PCODE: $000000F5 VOL: 1
;PCODE: $000000F6 VOL: 0
; 0000 00E1 }
; 0000 00E2 }
;PCODE: $000000F7 VOL: 0
; 0000 00E3 }
;PCODE: $000000F8 VOL: 0
; 0000 00E4 else if(cnt_beep_delay_ms){
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 1
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00E5 cnt_beep_delay_ms--;
;PCODE: $000000FE VOL: 1
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 1
; 0000 00E6 if(cnt_beep_delay_ms==0){
;PCODE: $00000101 VOL: 1
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00E7 cnt_beep_ms=beep_ms;
;PCODE: $00000104 VOL: 1
;PCODE: $00000105 VOL: 0
; 0000 00E8 }
; 0000 00E9 }
;PCODE: $00000106 VOL: 0
; 0000 00EA }
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00EB 
; 0000 00EC 
; 0000 00ED }
;PCODE: $00000109 VOL: 0
; 0000 00EE }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;interrupt [22] void adc_isr(void)
; 0000 00FF {
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0100 // Read the 8 most significant bits  (Vref*(1/1))1024=(11,1111,11)11=FF , (Vref*(1/2))512=(01,1111,11)11=7F (Vref*(1/4))256=3F (Vref*(1/8))128=1F
; 0000 0101 // of the AD conversion result
; 0000 0102 ADC_DONE=TRUE;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 1
; 0000 0103 adc_data=ADCH;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 1
; 0000 0104 // Place your code here
; 0000 0105 }
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;void main(void)
; 0000 010B {
;PCODE: $00000117 VOL: 0
; 0000 010C // Declare your local variables here
; 0000 010D StandaloneMode=READSD;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 1
; 0000 010E //UINT i;//blink led loops
; 0000 010F // Crystal Oscillator division factor: 1
; 0000 0110 #ifdef _MEGA328_INCLUDED_
; 0000 0111 #pragma optsize-
; 0000 0112 CLKPR=0x80;
; 0000 0113 CLKPR=0x00;
; 0000 0114 #ifdef _OPTIMIZE_SIZE_
; 0000 0115 #pragma optsize+
; 0000 0116 #endif
; 0000 0117 #endif
; 0000 0118 // Port B initialization
; 0000 0119 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 011A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 011B PORTB=0x00;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 011C DDRB=0x00;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 011D 
; 0000 011E // Port C initialization
; 0000 011F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0120 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0121 PORTC=0x00;
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 0122 DDRC=0x00;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0123 
; 0000 0124 // Port D initialization
; 0000 0125 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0126 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0127 PORTD=0x00;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 0128 DDRD|=0x80;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0129 
; 0000 012A // Timer/Counter 0 initialization
; 0000 012B // Clock source: System Clock
; 0000 012C // Clock value: Timer 0 Stopped
; 0000 012D // Mode: Normal top=0xFF
; 0000 012E // OC0A output: Disconnected
; 0000 012F // OC0B output: Disconnected
; 0000 0130 #ifdef _MEGA64_INCLUDED_
; 0000 0131 ASSR=0x00;
; 0000 0132 TCCR0=0x00;
; 0000 0133 TCNT0=0x00;
; 0000 0134 OCR0=0x00;
; 0000 0135 #else
; 0000 0136 TCCR0A=0x00;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0137 TCCR0B=0x00;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 0138 TCNT0=0x00;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 0139 OCR0A=0x00;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 013A OCR0B=0x00;
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 013B #endif
; 0000 013C // Timer/Counter 1 initialization
; 0000 013D // Clock source: System Clock
; 0000 013E // Clock value: Timer1 Stopped
; 0000 013F // Mode: Normal top=0xFFFF
; 0000 0140 // OC1A output: Discon.
; 0000 0141 // OC1B output: Discon.
; 0000 0142 // Noise Canceler: Off
; 0000 0143 // Input Capture on Falling Edge
; 0000 0144 // Timer1 Overflow Interrupt: Off
; 0000 0145 // Input Capture Interrupt: Off
; 0000 0146 // Compare A Match Interrupt: Off
; 0000 0147 // Compare B Match Interrupt: Off
; 0000 0148 TCCR1A=0x00;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0149 TCCR1B=0x00;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 014A TCNT1H=0x00;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 014B TCNT1L=0x00;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 014C ICR1H=0x00;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 014D ICR1L=0x00;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 014E OCR1AH=0x00;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 014F OCR1AL=0x00;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0150 OCR1BH=0x00;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 0151 OCR1BL=0x00;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 0152 
; 0000 0153 // Timer/Counter 2 initialization
; 0000 0154 // Clock source: System Clock
; 0000 0155 // Clock value: Timer2 Stopped
; 0000 0156 // Mode: Normal top=0xFF
; 0000 0157 // OC2A output: Disconnected
; 0000 0158 // OC2B output: Disconnected
; 0000 0159 #ifdef _MEGA64_INCLUDED_
; 0000 015A TCCR2=0x00;
; 0000 015B TCNT2=0x00;
; 0000 015C OCR2=0x00;
; 0000 015D #else
; 0000 015E ASSR=0x00;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 015F TCCR2A=0x00;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0160 TCCR2B=0x00;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0161 TCNT2=0x00;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0162 OCR2A=0x00;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0163 OCR2B=0x00;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0164 #endif
; 0000 0165 // External Interrupt(s) initialization
; 0000 0166 // INT0: Off
; 0000 0167 // INT1: Off
; 0000 0168 // Interrupt on any change on pins PCINT0-7: Off
; 0000 0169 // Interrupt on any change on pins PCINT8-14: Off
; 0000 016A // Interrupt on any change on pins PCINT16-23: Off
; 0000 016B EICRA=0x00;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 016C EIMSK=0x00;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 016D #ifdef _MEGA64_INCLUDED_
; 0000 016E EICRA=0x00;
; 0000 016F EICRB=0x00;
; 0000 0170 EIMSK=0x00;
; 0000 0171 #else
; 0000 0172 PCICR=0x00;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 0173 #endif
; 0000 0174 #ifdef _MEGA64_INCLUDED_
; 0000 0175 TIMSK=0x00;
; 0000 0176 ETIMSK=0x00;
; 0000 0177 #else
; 0000 0178 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0179 TIMSK0=0x00;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 017A 
; 0000 017B // Timer/Counter 1 Interrupt(s) initialization
; 0000 017C TIMSK1=0x00;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 017D 
; 0000 017E // Timer/Counter 2 Interrupt(s) initialization
; 0000 017F TIMSK2=0x00;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 0180 #endif
; 0000 0181 #ifdef PRINT_DEBUG
; 0000 0182 // USART initialization
; 0000 0183 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0184 // USART Receiver: On
; 0000 0185 // USART Transmitter: On
; 0000 0186 // USART0 Mode: Asynchronous
; 0000 0187 // USART Baud Rate: 9600
; 0000 0188 UCSR0A=0x00;
; 0000 0189 UCSR0B=0xD8;
; 0000 018A UCSR0C=0x06;
; 0000 018B UBRR0H=0x00;
; 0000 018C //UBRR0L=0x33; //9600 for 8Mhz osc
; 0000 018D UBRR0L=0x4D; //9600 for 12Mhz osc
; 0000 018E //UBRR0L=0x67; //9600 for 16Mhz osc
; 0000 018F #else
; 0000 0190 UBRR0H = 0;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0191 UBRR0L = 0;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0192 /* Setting the XCKn port pin as output, enables master
; 0000 0193 mode. */
; 0000 0194 ISP_SCK_INIT();//XCK0_DDR |= (1<<XCK0);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 0195 /* Set MSPI mode of operation and SPI data mode 0. */
; 0000 0196 UCSR0C =
; 0000 0197 (1<<UMSEL01)|(1<<UMSEL00)|(0<<UCPHA0)|(0<<UCPOL0);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0198 /* Enable receiver and transmitter. */
; 0000 0199 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 019A /* Set baud rate. */
; 0000 019B /* IMPORTANT: The Baud Rate must be set after the
; 0000 019C transmitter is enabled */
; 0000 019D UBRR0H = 0;    //+1 prescaler of clock
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 019E UBRR0L = 0;  // 2+1=3 12Mhz/2=6Mhz 6/3=2Mhz spi clock out
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 019F #endif
; 0000 01A0 
; 0000 01A1 // Analog Comparator initialization
; 0000 01A2 // Analog Comparator: Off
; 0000 01A3 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 01A4 ACSR=0x80;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 01A5 ADCSRB=0x00;
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 01A6 #ifndef _MEGA64_INCLUDED_
; 0000 01A7 DIDR1=0x00;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 01A8 #endif
; 0000 01A9 // ADC initialization
; 0000 01AA // ADC Clock frequency: 1000.000 kHz
; 0000 01AB // ADC Voltage Reference: AREF pin
; 0000 01AC // ADC Auto Trigger Source: ADC Stopped
; 0000 01AD // Only the 8 most significant bits of
; 0000 01AE // the AD conversion result are used
; 0000 01AF // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
; 0000 01B0 // ADC4: On, ADC5: On
; 0000 01B1 #ifndef _MEGA64_INCLUDED_
; 0000 01B2 DIDR0=0x00;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 01B3 #endif
; 0000 01B4 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 01B5 ADCSRA=0x83;//ADCSRA=0x8B;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 01B6 
; 0000 01B7 // SPI initialization
; 0000 01B8 // SPI disabled
; 0000 01B9 SPCR=0x00;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 01BA 
; 0000 01BB // TWI initialization
; 0000 01BC // TWI disabled
; 0000 01BD TWCR=0x00;
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 01BE 
; 0000 01BF ADC_DONE=TRUE;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 1
; 0000 01C0 AVR910_Init();
;PCODE: $0000017E VOL: 0
; 0000 01C1 init_sd_tim1();
;PCODE: $0000017F VOL: 0
; 0000 01C2 BUZ_INIT();
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 01C3 debug=1;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 01C4 // Global enable interrupts
; 0000 01C5 #asm("sei")
;PCODE: $00000186 VOL: 0
; 0000 01C6 #ifdef PRINT_DEBUG
; 0000 01C7 if(debug)
; 0000 01C8 printf("Init done. Current folder is %d.\r\n",dirnum);
; 0000 01C9 #endif
; 0000 01CA g_UpSkip=1;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 01CB g_DownSkip=1;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 01CC g_MaxFolders=5;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 01CD g_CpuFreq=8000;
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 01CE /*
; 0000 01CF t1_init_h=(UINT)(0x10000L-(g_CpuFreq*1000L/(T1_PRESC*T1_OVF_FREQ)))>>8;
; 0000 01D0 t1_init_l=(UINT)(0x10000L-(g_CpuFreq*1000L/(T1_PRESC*T1_OVF_FREQ)))&0xff;
; 0000 01D1 Beeps(1,5,1);
; 0000 01D2 while(1);
; 0000 01D3 */
; 0000 01D4 #ifdef PRINT_LCD
; 0000 01D5 PORTC&=~0x3F;
; 0000 01D6 DDRC|=0x3F; //enable lcd control PC0,1,2,3,4,5=0b0011,1111
; 0000 01D7 PORTD&=~0x80;
; 0000 01D8 DDRD|=0x80; //enable lcd control STR=EN PD7
; 0000 01D9 MsgBufClr();
; 0000 01DA lcd_init(16);
; 0000 01DB lcd_gotoxy(0,0);
; 0000 01DC lcd_putsf("AVRISPSD V");
; 0000 01DD lcd_putsf(FW_VER);
; 0000 01DE #ifndef DEBUG_PROTEUS
; 0000 01DF #ifdef PRINT_LCD
; 0000 01E0 delay_ms(1000);
; 0000 01E1 #endif
; 0000 01E2 #endif
; 0000 01E3 #endif
; 0000 01E4 
; 0000 01E5 #ifdef SEG7 //7 segment
; 0000 01E6 init7seg();
;PCODE: $0000018F VOL: 0
; 0000 01E7 if(eeprom_read_byte(4)!=0x44)
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 01E8 {
; 0000 01E9 StandaloneMode=RUNNING;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 1
; 0000 01EA show7seg('d');
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 01EB delay_ms(1000);
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 01EC StandaloneMode=READSD;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 1
; 0000 01ED }
; 0000 01EE #endif
; 0000 01EF 
; 0000 01F0 t1_init_h=(UINT)(0x10000L-(g_CpuFreq*1000L/(T1_PRESC*T1_OVF_FREQ)))>>8;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 01F1 t1_init_l=(UINT)(0x10000L-(g_CpuFreq*1000L/(T1_PRESC*T1_OVF_FREQ)))&0xff;
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 01F2 Call_GetConfig();
;PCODE: $000001B7 VOL: 0
; 0000 01F3 #ifndef PRINT_LCD
; 0000 01F4 g_UpSkip=1;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 01F5 g_DownSkip=1;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 01F6 #ifdef SEG7
; 0000 01F7 g_MaxFolders=10;
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 01F8 #else
; 0000 01F9 g_MaxFolders=5;
; 0000 01FA #endif
; 0000 01FB #endif
; 0000 01FC //t1_init=(0x10000L-(g_CpuFreq/(T1_PRESC*T1_OVF_FREQ)));
; 0000 01FD t1_init_h=(UINT)(0x10000L-(g_CpuFreq*1000L/(T1_PRESC*T1_OVF_FREQ)))>>8;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 01FE t1_init_l=(UINT)(0x10000L-(g_CpuFreq*1000L/(T1_PRESC*T1_OVF_FREQ)))&0xff;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 01FF /*
; 0000 0200 #ifdef PRINT_LCD
; 0000 0201 lcd_putsf_row(1,"init ");
; 0000 0202 lcd_puts_hex(t1_init_h);
; 0000 0203 lcd_puts_hex(t1_init_l);
; 0000 0204 lcd_putsf(" ");
; 0000 0205 lcd_puts_hex(g_CpuFreq>>8);
; 0000 0206 lcd_puts_hex(g_CpuFreq);
; 0000 0207 delay_ms(3000);
; 0000 0208 #endif
; 0000 0209 */
; 0000 020A 
; 0000 020B #ifdef PRINT_LCD
; 0000 020C if(SaveDirNum==0 || SaveDirNum>=(g_MaxFolders-1)) //reset eeprom last project directory
; 0000 020D SaveDirNum=1;
; 0000 020E dirnum=SaveDirNum;
; 0000 020F #else
; 0000 0210 dirnum=1;// no lcd always start from 1
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0211 #ifdef SEG7
; 0000 0212 //show7seg(1);
; 0000 0213 #endif
; 0000 0214 #endif
; 0000 0215 //StandaloneMode=IDLE;
; 0000 0216 
; 0000 0217 Beeps(0,0,0);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 0218 #ifdef PRINT_LCD
; 0000 0219 if(SaveLockState>1)
; 0000 021A SaveLockState=0;
; 0000 021B if(lcd_GetProgName(0)==TRUE){
; 0000 021C StandaloneMode=IDLE;
; 0000 021D }
; 0000 021E else
; 0000 021F StandaloneMode=SDFAIL;
; 0000 0220 #else
; 0000 0221 if(SaveLockState!=0)
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 0222 SaveLockState=0;
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 0223 CounterToggles=15;
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 0224 if(Call_GetDir()==TRUE){
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0225 Beeps(1,1,1);
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 0226 StandaloneMode=IDLE;
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 1
; 0000 0227 }
; 0000 0228 else{
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 0229 StandaloneMode=SDFAIL;
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 1
; 0000 022A //return;
; 0000 022B }
;PCODE: $000001F9 VOL: 0
; 0000 022C #endif
; 0000 022D while (1)
;PCODE: $000001FA VOL: 0
; 0000 022E {
; 0000 022F #ifndef PRINT_LCD
; 0000 0230 CanShow=0;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 0231 #endif
; 0000 0232 CanTestButtons=TestADCs();
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 0233 switch(CanTestButtons)
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0234 {
; 0000 0235 #ifdef PRINT_LCD
; 0000 0236 case (1<<BUTTON_UP):
; 0000 0237 UpButtonAction();
; 0000 0238 break;
; 0000 0239 #endif
; 0000 023A case (1<<BUTTON_DOWN):
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 023B #ifdef PRINT_LCD
; 0000 023C DownButtonAction();
; 0000 023D #else
; 0000 023E if(DisableNextDir==TRUE)
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 023F StopButtonAction();
;PCODE: $00000207 VOL: 0
; 0000 0240 else{
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0241 if(StandaloneMode==FAIL || StandaloneMode==SDFAIL){
;PCODE: $0000020A VOL: 1
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 1
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0242 StopButtonAction();
;PCODE: $00000212 VOL: 0
; 0000 0243 }
; 0000 0244 else{
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 0245 UpButtonAction();
;PCODE: $00000215 VOL: 0
; 0000 0246 //StopButtonAction();
; 0000 0247 }
;PCODE: $00000216 VOL: 0
; 0000 0248 }
;PCODE: $00000217 VOL: 0
; 0000 0249 #endif
; 0000 024A break;
;PCODE: $00000218 VOL: 0
; 0000 024B #ifdef PRINT_LCD
; 0000 024C case (1<<BUTTON_START):StartButtonAction();
; 0000 024D break;
; 0000 024E #endif
; 0000 024F case (1<<BUTTON_STOP):
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 0250 #ifdef PRINT_LCD
; 0000 0251 StopButtonAction();
; 0000 0252 #else
; 0000 0253 StartButtonAction();
;PCODE: $0000021D VOL: 0
; 0000 0254 #endif
; 0000 0255 break;
;PCODE: $0000021E VOL: 0
; 0000 0256 default:CanTestButtons=0;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0257 break;
;PCODE: $00000221 VOL: 0
; 0000 0258 }
;PCODE: $00000222 VOL: 0
; 0000 0259 if(StandaloneMode==IDLE || StandaloneMode==PASS){
;PCODE: $00000223 VOL: 1
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 1
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 025A #asm("nop")
;PCODE: $0000022B VOL: 0
; 0000 025B }
; 0000 025C else if(StandaloneMode==FAIL || StandaloneMode==SDFAIL){
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 1
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 1
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 025D //CanTestButtons=0;
; 0000 025E #ifdef PRINT_LCD
; 0000 025F if(CanShow==0){
; 0000 0260 CanShow=1;
; 0000 0261 //lcd_putsf_row3(3,"Press Stop");
; 0000 0262 }
; 0000 0263 #endif
; 0000 0264 }
; 0000 0265 #ifdef PRINT_LCD
; 0000 0266 if(StopEvent)
; 0000 0267 StopButtonAction();
; 0000 0268 if(CanChangeMsg)
; 0000 0269 ChangeMsg();
; 0000 026A #endif
; 0000 026B } //end while
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 026C }//end main
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;void UpButtonAction()
; 0000 026E {
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 026F //bool isOneDirReadOk=false;
; 0000 0270 int i;
; 0000 0271 #ifdef DEBUG_BUTTONS;
; 0000 0272 lcd_putsf_row(0,"Up");
; 0000 0273 #endif
; 0000 0274 #ifdef PRINT_LCD
; 0000 0275 if((StandaloneMode!=IDLE)&& (StandaloneMode!=SDFAIL)){
; 0000 0276 return;
; 0000 0277 }
; 0000 0278 #else
; 0000 0279 #ifndef SEG7
; 0000 027A if((dirnum >= g_MaxFolders)){
; 0000 027B DoBeeps(3,1,1);
; 0000 027C return;
; 0000 027D }
; 0000 027E #endif
; 0000 027F if((StandaloneMode!=IDLE)){
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;	i -> R16,R17
;PCODE: $00000241 VOL: 1
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 0280 DoBeeps(3,1,1);
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 0281 return;
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 0282 }
; 0000 0283 #endif
; 0000 0284 if(SaveLockState!=0){
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 0285 #ifdef PRINT_LCD
; 0000 0286 lcd_putsf_row(3,"List Locked");
; 0000 0287 #endif
; 0000 0288 Beeps(3,1,1);
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0289 return;
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 028A }
; 0000 028B for(i=NUM_OF_TICKS;i>0;i--){  //if up button pressed about 10 sec - unlock list function
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 028C delay_ms(TICK_DELAY);
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 028D if(i==(NUM_OF_TICKS-DEBOUNCE))
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0000 028E DoBeeps(1,1,1);
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 028F #ifdef PRINT_LCD
; 0000 0290 if(TestButton(BUTTON_UP)==FALSE)
; 0000 0291 #else
; 0000 0292 if(TestButton(BUTTON_DOWN)==FALSE)
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 0293 #endif
; 0000 0294 break;
;PCODE: $00000277 VOL: 0
; 0000 0295 
; 0000 0296 }
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 0297 if(i>(NUM_OF_TICKS-DEBOUNCE)){ //debounce
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 0298 return;
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 0299 }
; 0000 029A if(i==0){
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 029B DoBeeps(3,1,1);//
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 029C return;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 029D }
; 0000 029E chkdir:
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 029F #ifdef PRINT_LCD
; 0000 02A0 if((dirnum+g_UpSkip) > g_MaxFolders)
; 0000 02A1 dirnum=1;
; 0000 02A2 else
; 0000 02A3 dirnum+=g_UpSkip;
; 0000 02A4 #else
; 0000 02A5 CounterToggles=15;
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 02A6 if((dirnum+1) > g_MaxFolders){
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 02A7 #ifndef SEG7
; 0000 02A8 DoBeeps(3,1,1);//
; 0000 02A9 return;
; 0000 02AA #else
; 0000 02AB dirnum=1;
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 02AC #endif
; 0000 02AD }
; 0000 02AE else
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 02AF dirnum+=1;
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 02B0 #endif
; 0000 02B1 #ifdef PRINT_DEBUG
; 0000 02B2 while(tx_counter);
; 0000 02B3 printf("Current Folder %d\r\n",dirnum);
; 0000 02B4 while(tx_counter);
; 0000 02B5 #endif
; 0000 02B6 StandaloneMode=READSD;
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 1
; 0000 02B7 #ifdef PRINT_LCD
; 0000 02B8 if(lcd_GetProgName(0)==TRUE){
; 0000 02B9 StandaloneMode=IDLE;
; 0000 02BA Beeps(1,1,1);
; 0000 02BB }
; 0000 02BC else{
; 0000 02BD StandaloneMode=SDFAIL;
; 0000 02BE Beeps(3,1,1);
; 0000 02BF return;
; 0000 02C0 }
; 0000 02C1 #else
; 0000 02C2 if(Call_GetDir()==TRUE){
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 02C3 StandaloneMode=IDLE;
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 1
; 0000 02C4 Beeps(1,dirnum,1);
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 02C5 }
; 0000 02C6 else{
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 02C7 //StandaloneMode=SDFAIL;
; 0000 02C8 Beeps(3,1,1);
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
; 0000 02C9 #ifdef SEG7
; 0000 02CA dirnum=1;
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 02CB #else
; 0000 02CC dirnum-=1;
; 0000 02CD #endif
; 0000 02CE if(Call_GetDir()==TRUE){
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 02CF StandaloneMode=IDLE;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 1
; 0000 02D0 //Beeps(1,dirnum,1);
; 0000 02D1 }
; 0000 02D2 else{
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 02D3 StandaloneMode=SDFAIL;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 1
; 0000 02D4 Beeps(3,1,1);
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 02D5 return;
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
; 0000 02D6 }
;PCODE: $000002CE VOL: 0
; 0000 02D7 }
;PCODE: $000002CF VOL: 0
; 0000 02D8 #endif
; 0000 02D9 StandaloneMode=IDLE;
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 1
; 0000 02DA LEDS_OFF();
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 02DB }
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;void StartButtonAction()
; 0000 02DE {
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 02DF int i;
; 0000 02E0 #ifdef DEBUG_BUTTONS;
; 0000 02E1 lcd_putsf_row(0,"Start");
; 0000 02E2 #endif
; 0000 02E3 if(StandaloneMode!=IDLE && StandaloneMode!=PASS){
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;	i -> R16,R17
;PCODE: $000002DD VOL: 1
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 1
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 02E4 //DoBeeps(3,1,1);
; 0000 02E5 return;
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 02E6 }
; 0000 02E7 for(i=NUM_OF_TICKS;i>0;i--){
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 02E8 delay_ms(TICK_DELAY);
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 02E9 
; 0000 02EA if(i==(NUM_OF_TICKS-DEBOUNCE))
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 02EB Beeps(1,1,1);// one short beep
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 02EC #ifdef PRINT_LCD
; 0000 02ED if(TestButton(BUTTON_START)==FALSE)
; 0000 02EE #else
; 0000 02EF if(TestButton(BUTTON_STOP)==FALSE)
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 02F0 #endif
; 0000 02F1 break;
;PCODE: $00000305 VOL: 0
; 0000 02F2 }
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 02F3 if(i>(NUM_OF_TICKS-DEBOUNCE)) //debounce
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 02F4 return;
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 02F5 if(SaveDirNum!=dirnum)
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 02F6 SaveDirNum=dirnum;
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 02F7 if(i==0){// lock the list
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 02F8 if(SaveLockState!=1)
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 02F9 SaveLockState=1;
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 02FA DoBeeps(2,1,1);//one long beep
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 02FB #ifdef PRINT_LCD
; 0000 02FC lcd_putsf_row(3,"List Locked");
; 0000 02FD delay_ms(LCD_MSG_SHORT_DELAY);
; 0000 02FE #endif
; 0000 02FF return;
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 0300 }
; 0000 0301 #ifdef PRINT_LCD
; 0000 0302 itoa(dirnum,lcdnum);
; 0000 0303 lcd_puts_row(0,lcdnum);
; 0000 0304 lcd_putsf(".");
; 0000 0305 lcd_puts(tmpimage.progname);
; 0000 0306 lcd_putsf_row(3,"Programming ....");
; 0000 0307 #else
; 0000 0308 DisableNextDir=TRUE;
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
; 0000 0309 #ifdef SEG7
; 0000 030A show7seg(dirnum);
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
; 0000 030B //show7seg('-');
; 0000 030C #endif
; 0000 030D #endif
; 0000 030E StandaloneMode=RUNNING;
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 1
; 0000 030F LEDS_OFF();
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 0310 //#asm("cli")
; 0000 0311 Counter10ms=0;
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 1
; 0000 0312 StandalonProg();
;PCODE: $0000033D VOL: 0
; 0000 0313 //#asm("sei")
; 0000 0314 #ifdef PRINT_LCD
; 0000 0315 //lcd_init(16);
; 0000 0316 #endif
; 0000 0317 }
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;void DownButtonAction()
; 0000 031A {
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 031B int i;
; 0000 031C #ifdef DEBUG_BUTTONS;
; 0000 031D lcd_putsf_row(0,"Down");
; 0000 031E #endif
; 0000 031F if(StandaloneMode!=IDLE && StandaloneMode!=SDFAIL){
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;	i -> R16,R17
;PCODE: $00000345 VOL: 1
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 1
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
; 0000 0320 //DoBeeps(3,1,1);
; 0000 0321 return;
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 0322 }
; 0000 0323 if(SaveLockState!=0){
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
; 0000 0324 #ifdef PRINT_LCD
; 0000 0325 lcd_putsf_row(3,"List Locked");
; 0000 0326 #endif
; 0000 0327 Beeps(3,1,1);
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 0328 return;
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0000 0329 }
; 0000 032A for(i=NUM_OF_TICKS;i>0;i--){  //if down button pressed about 10 sec - unlock list function
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 032B delay_ms(TICK_DELAY);
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
; 0000 032C if(i==(NUM_OF_TICKS-DEBOUNCE))
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
; 0000 032D DoBeeps(1,1,1);
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 032E if(TestButton(BUTTON_DOWN)==FALSE)
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 032F break;
;PCODE: $0000037B VOL: 0
; 0000 0330 
; 0000 0331 }
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
; 0000 0332 if(i==0){
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
; 0000 0333 Beeps(3,1,1);//fail beep the button pressed too much time
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0000 0334 return;
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 0335 }
; 0000 0336 if(i>(NUM_OF_TICKS-DEBOUNCE)){ //debounce
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 0337 return;
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
; 0000 0338 }
; 0000 0339 
; 0000 033A if(dirnum){
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
; 0000 033B if(dirnum <= g_DownSkip)
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 033C dirnum=g_MaxFolders;
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
; 0000 033D else
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
; 0000 033E dirnum-=g_DownSkip;
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 033F }
;PCODE: $000003A3 VOL: 0
; 0000 0340 #ifdef PRINT_DEBUG
; 0000 0341 while(tx_counter);
; 0000 0342 printf("Current Folder %d\r\n",dirnum);
; 0000 0343 while(tx_counter);
; 0000 0344 #endif
; 0000 0345 StandaloneMode=READSD;
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 1
; 0000 0346 #ifdef PRINT_LCD
; 0000 0347 if(lcd_GetProgName(0)==TRUE){
; 0000 0348 StandaloneMode=IDLE;
; 0000 0349 Beeps(1,1,1);
; 0000 034A }
; 0000 034B else{
; 0000 034C Beeps(2,1,2);
; 0000 034D StandaloneMode=SDFAIL;
; 0000 034E return;
; 0000 034F }
; 0000 0350 #else
; 0000 0351 if(Call_GetDir()==TRUE){
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 0352 StandaloneMode=IDLE;
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 1
; 0000 0353 DoBeeps(1,dirnum,1);
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 0354 }
; 0000 0355 else{
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 0356 StandaloneMode=SDFAIL;
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 1
; 0000 0357 Beeps(2,1,2);
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0000 0358 return;
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 0359 }
;PCODE: $000003C0 VOL: 0
; 0000 035A #endif
; 0000 035B StandaloneMode=IDLE;
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 1
; 0000 035C LEDS_OFF();
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
; 0000 035D }
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;void StopButtonAction()
; 0000 0360 {
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 0361 int i;
; 0000 0362 #ifdef DEBUG_BUTTONS;
; 0000 0363 lcd_putsf_row(0,"Stop");
; 0000 0364 #endif
; 0000 0365 if(StandaloneMode==RUNNING){
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;	i -> R16,R17
;PCODE: $000003CE VOL: 1
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
; 0000 0366 Beeps(3,1,1);
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 0367 return;
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
; 0000 0368 }
; 0000 0369 for(i=NUM_OF_TICKS;i>0;i--){  //if down button pressed about 10 sec - unlock list function
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0000 036A delay_ms(TICK_DELAY);
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0000 036B #ifdef PRINT_LCD
; 0000 036C if(TestButton(BUTTON_STOP)==FALSE)
; 0000 036D #else
; 0000 036E if(TestButton(BUTTON_DOWN)==FALSE)
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 036F #endif
; 0000 0370 break;
;PCODE: $000003EB VOL: 0
; 0000 0371 if(i==(NUM_OF_TICKS-DEBOUNCE)){
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
; 0000 0372 Beeps(1,1,1);//short beep once
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0000 0373 if(StandaloneMode==FAIL || StandaloneMode==SDFAIL)
;PCODE: $000003F7 VOL: 1
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 1
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
; 0000 0374 break;
;PCODE: $000003FF VOL: 0
; 0000 0375 }
;PCODE: $00000400 VOL: 0
; 0000 0376 }
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 0377 if(i>(NUM_OF_TICKS-DEBOUNCE)){ //debounce
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 0378 return;
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
; 0000 0379 }
; 0000 037A if(StandaloneMode!=FAIL){
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 1
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 037B if(i==0){//unlock the listing
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
; 0000 037C if(SaveLockState!=0)
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0000 037D SaveLockState=0;
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 037E Beeps(2,1,1);//long beep once
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 037F #ifdef PRINT_LCD
; 0000 0380 lcd_putsf_row(3,"List Unlocked");
; 0000 0381 delay_ms(LCD_MSG_SHORT_DELAY);
; 0000 0382 #endif
; 0000 0383 }
; 0000 0384 }
;PCODE: $00000421 VOL: 0
; 0000 0385 StopEvent=0;
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 1
; 0000 0386 CanShow=0;
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
; 0000 0387 #ifdef DEBUG_BUTTONS1;
; 0000 0388 lcd_putsf_row(0,"After Stop");
; 0000 0389 delay_ms(1000);
; 0000 038A #endif
; 0000 038B LEDS_OFF();    //
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 038C //StandaloneMode=IDLE;
; 0000 038D StandaloneMode=READSD;
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 1
; 0000 038E Call_GetConfig();
;PCODE: $0000042D VOL: 0
; 0000 038F #ifdef PRINT_LCD
; 0000 0390 if(lcd_GetProgName(0)==TRUE){//read dir again
; 0000 0391 StandaloneMode=IDLE;
; 0000 0392 if(SaveDirNum!=dirnum)
; 0000 0393 SaveDirNum = dirnum;
; 0000 0394 }
; 0000 0395 else{
; 0000 0396 StandaloneMode=SDFAIL;
; 0000 0397 Beeps(2,1,2);
; 0000 0398 }
; 0000 0399 #else
; 0000 039A if(Call_GetDir()==TRUE){
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0000 039B StandaloneMode=IDLE;
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 1
; 0000 039C Beeps(1,dirnum,1);
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 039D }
; 0000 039E else{
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
; 0000 039F //StandaloneMode=SDFAIL;
; 0000 03A0 StandaloneMode=SDFAIL;
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 1
; 0000 03A1 Beeps(3,1,1);
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 03A2 return;
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0000 03A3 /*
; 0000 03A4 Beeps(3,1,1);
; 0000 03A5 dirnum-=1;
; 0000 03A6 if(Call_GetDir()==TRUE){
; 0000 03A7 //Beeps(1,dirnum,1);
; 0000 03A8 }
; 0000 03A9 else{
; 0000 03AA StandaloneMode=SDFAIL;
; 0000 03AB Beeps(3,1,1);
; 0000 03AC return;
; 0000 03AD }
; 0000 03AE */
; 0000 03AF }
;PCODE: $00000447 VOL: 0
; 0000 03B0 #endif
; 0000 03B1 while(TestButton(BUTTONS_RELEASED)==FALSE);
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
; 0000 03B2 }
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;void init7seg(void)
; 0000 042A {
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 042B DDRC=0x3F;//PC0-5 seg A-F outputs
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 042C DDRD.7=1;//PD7 seg G outputs
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0000 042D PORTC=0x3F;//all 1's all segments off
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
; 0000 042E PORTD.7=1; //seg G off
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
; 0000 042F }
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;void show7seg(char num)
; 0000 0432 {
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
; 0000 0433 switch(num){
;	num -> Y+0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
; 0000 0434 case 0:
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0000 0435 PORTC=0;
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
; 0000 0436 PORTD.7=1;
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
; 0000 0437 break;
;PCODE: $00000469 VOL: 0
; 0000 0438 case 1:
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
; 0000 0439 PORTC=0x39;//XX1111001
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
; 0000 043A PORTD.7=1;
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
; 0000 043B break;
;PCODE: $00000472 VOL: 0
; 0000 043C case 2:
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 043D PORTC=0x24;//XX100100
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
; 0000 043E PORTD.7=0;
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 043F break;
;PCODE: $0000047B VOL: 0
; 0000 0440 case 3:
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
; 0000 0441 PORTC=0x30;//XX110000
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
; 0000 0442 PORTD.7=0;
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
; 0000 0443 break;
;PCODE: $00000484 VOL: 0
; 0000 0444 case 4:
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 0445 PORTC=0x19;//XX011001
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
; 0000 0446 PORTD.7=0;
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
; 0000 0447 break;
;PCODE: $0000048D VOL: 0
; 0000 0448 case 5:
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
; 0000 0449 PORTC=0x12;//XX010010
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
; 0000 044A PORTD.7=0;
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
; 0000 044B break;
;PCODE: $00000496 VOL: 0
; 0000 044C case 6:
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 044D PORTC=0x02;//XX000010
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
; 0000 044E PORTD.7=0;
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
; 0000 044F break;
;PCODE: $0000049F VOL: 0
; 0000 0450 case 7:
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
; 0000 0451 PORTC=0x38;//XX111000
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
; 0000 0452 PORTD.7=1;
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
; 0000 0453 break;
;PCODE: $000004A8 VOL: 0
; 0000 0454 case 8:
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0000 0455 PORTC=0x00;//XX000000
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
; 0000 0456 PORTD.7=0;
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0000 0457 break;
;PCODE: $000004B1 VOL: 0
; 0000 0458 case 9:
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
; 0000 0459 PORTC=0x10;//XX010000
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
; 0000 045A PORTD.7=0;
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
; 0000 045B break;
;PCODE: $000004BA VOL: 0
; 0000 045C case 10:
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
; 0000 045D PORTC=0;
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
; 0000 045E PORTD.7=1;
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
; 0000 045F break;
;PCODE: $000004C3 VOL: 0
; 0000 0460 case '-':
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
; 0000 0461 PORTC=0x3F;//XX111111
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
; 0000 0462 PORTD.7=0;
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
; 0000 0463 break;
;PCODE: $000004CC VOL: 0
; 0000 0464 case 'd':
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
; 0000 0465 PORTC=0x21;//XX100001
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
; 0000 0466 PORTD.7=0;
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
; 0000 0467 break;
;PCODE: $000004D5 VOL: 0
; 0000 0468 case 'e':
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
; 0000 0469 PORTC=0x04;//XX000100
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
; 0000 046A PORTD.7=0;
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
; 0000 046B break;
;PCODE: $000004DE VOL: 0
; 0000 046C case 'r':
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
; 0000 046D PORTC=0x2F;//XX101111
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
; 0000 046E PORTD.7=0;
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
; 0000 046F break;
;PCODE: $000004E7 VOL: 0
; 0000 0470 case 'E':
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
; 0000 0471 PORTC=0x06;//XX000110
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
; 0000 0472 PORTD.7=0;
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
; 0000 0473 break;
;PCODE: $000004F0 VOL: 0
; 0000 0474 case 'F':
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
; 0000 0475 PORTC=0x0E;//XX001110
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
; 0000 0476 PORTD.7=0;
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
; 0000 0477 break;
;PCODE: $000004F9 VOL: 0
; 0000 0478 case 'P':
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
; 0000 0479 PORTC=0x0C;//XX001100
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0000 047A PORTD.7=0;
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
; 0000 047B break;
;PCODE: $00000502 VOL: 0
; 0000 047C default:
;PCODE: $00000503 VOL: 0
; 0000 047D break;
;PCODE: $00000504 VOL: 0
; 0000 047E }
;PCODE: $00000505 VOL: 0
; 0000 047F }
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;unsigned char TestButton(UCHAR bt)
; 0000 0484 {
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
; 0000 0485 if(TestADCs()==(1<<bt))
;	bt -> Y+0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 0486 return TRUE;
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
; 0000 0487 else
;PCODE: $00000517 VOL: 0
; 0000 0488 return FALSE;
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
; 0000 0489 }
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;unsigned char TestADCs()
; 0000 048C {
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
; 0000 048D unsigned char StateOfButtons=0;
; 0000 048E ADC_DONE=FALSE;
;PCODE: $00000521 VOL: 0
;	StateOfButtons -> R17
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 1
; 0000 048F ADMUX=(6 | (ADC_VREF_TYPE & 0xff)); //ADC6 ch=6, ADC7 ch=7
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
; 0000 0490 // Delay needed for the stabilization of the ADC input voltage
; 0000 0491 delay_us(20);
;PCODE: $00000528 VOL: 0
; 0000 0492 // Start the AD conversion
; 0000 0493 ADCSRA|=0x40;
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
; 0000 0494 while(ADCSRA&(1<<ADSC));//while(ADC_DONE==FALSE);
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
; 0000 0495 adc_data=ADCH;
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 1
; 0000 0496 if(adc_data<50)
;PCODE: $00000534 VOL: 1
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
; 0000 0497 StateOfButtons|=1<<BUTTON_DOWN;
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
; 0000 0498 else if(adc_data<150)
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 1
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
; 0000 0499 StateOfButtons|=1<<BUTTON_STOP;
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
; 0000 049A ADC_DONE=FALSE;
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 1
; 0000 049B ADMUX=(7 | (ADC_VREF_TYPE & 0xff)); //ADC6 ch=6, ADC7 ch=7
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
; 0000 049C // Delay needed for the stabilization of the ADC input voltage
; 0000 049D delay_us(20);
;PCODE: $00000546 VOL: 0
; 0000 049E // Start the AD conversion
; 0000 049F ADCSRA|=0x40;
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
; 0000 04A0 while(ADCSRA&(1<<ADSC));//while(ADC_DONE==FALSE);
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
; 0000 04A1 adc_data=ADCH;
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 1
; 0000 04A2 if(adc_data<50)
;PCODE: $00000552 VOL: 1
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
; 0000 04A3 StateOfButtons|=1<<BUTTON_UP;
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
; 0000 04A4 else if(adc_data<150)
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 1
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
; 0000 04A5 StateOfButtons|=1<<BUTTON_START;
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
; 0000 04A6 if(StateOfButtons)
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
; 0000 04A7 return StateOfButtons;
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
; 0000 04A8 return (1<<BUTTONS_RELEASED);
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
; 0000 04A9 }
;PCODE: $00000569 VOL: 0
;void StartADC(unsigned char ch)
; 0000 04AC {
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
; 0000 04AD //char num1[3];
; 0000 04AE //unsigned char chan=ch;
; 0000 04AF ADC_DONE=FALSE;
;	ch -> Y+0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 1
; 0000 04B0 ADMUX=(ch | (ADC_VREF_TYPE & 0xff)); //ADC6 ch=6, ADC7 ch=7
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
; 0000 04B1 // Delay needed for the stabilization of the ADC input voltage
; 0000 04B2 delay_us(20);
;PCODE: $00000571 VOL: 0
; 0000 04B3 // Start the AD conversion
; 0000 04B4 ADCSRA|=0x40;
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
; 0000 04B5 while(ADC_DONE==FALSE);
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 1
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
; 0000 04B6 #ifdef DEBUG_BUTTONS
; 0000 04B7 if(adc_data>150)
; 0000 04B8 return;
; 0000 04B9 lcd_clear();
; 0000 04BA lcd_putsf_row(0,"ADC");
; 0000 04BB itoa(ch,num1);
; 0000 04BC lcd_puts(num1);
; 0000 04BD lcd_putchar(' ');
; 0000 04BE itoa(adc_data,num1);
; 0000 04BF lcd_puts(num1);
; 0000 04C0 if(chan==6){
; 0000 04C1 if(adc_data<50)
; 0000 04C2 lcd_putsf(" Down");
; 0000 04C3 else if(adc_data<150)
; 0000 04C4 lcd_putsf(" Stop");
; 0000 04C5 }
; 0000 04C6 else if(chan==7){
; 0000 04C7 if(adc_data<50)
; 0000 04C8 lcd_putsf(" Up");
; 0000 04C9 else if(adc_data<150)
; 0000 04CA lcd_putsf(" Start");
; 0000 04CB }
; 0000 04CC #endif
; 0000 04CD }
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;void Beeps(UCHAR tone,UCHAR times,int type_length)
; 0000 04DD {
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
; 0000 04DE CanBeep=1;
;	tone -> Y+3
;	times -> Y+2
;	type_length -> Y+0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 1
; 0000 04DF if(tone==0)
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
; 0000 04E0 CanBeep=0;
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 1
; 0000 04E1 StopEvent=0;
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 1
; 0000 04E2 cnt_beep_ms=beep_ms=(BEEP_ON_TIME_MS*type_length);
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 1
; 0000 04E3 cnt_beep_times=beep_times=times;
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 1
; 0000 04E4 cnt_beep_tone=beep_tone=tone;
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 1
; 0000 04E5 cnt_beep_delay_ms=beep_delay_ms=0;
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 1
; 0000 04E6 /*
; 0000 04E7 for(;times&&CanBeep;times--)
; 0000 04E8 {
; 0000 04E9 for(beep_ms=(BEEP_ON_TIME_MS*type_length);beep_ms&&CanBeep;beep_ms--)
; 0000 04EA {
; 0000 04EB BUZ_TGL();
; 0000 04EC delay_ms(tone);
; 0000 04ED if(CanBeep==0)
; 0000 04EE break;
; 0000 04EF }
; 0000 04F0 if(CanBeep==0)
; 0000 04F1 break;
; 0000 04F2 delay_ms(BEEP_OFF_TIME_MS);
; 0000 04F3 }
; 0000 04F4 
; 0000 04F5 CanBeep=0;
; 0000 04F6 //StopEvent=0;
; 0000 04F7 */
; 0000 04F8 }
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;void DoBeeps(UCHAR tone,UCHAR times,int type_length)
; 0000 04FB {
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
; 0000 04FC Beeps(tone,times,type_length);
;	tone -> Y+3
;	times -> Y+2
;	type_length -> Y+0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
; 0000 04FD return;
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
; 0000 04FE //   CanBeep=1;
; 0000 04FF //   StopEvent=0;
; 0000 0500 //   DoTone=tone;
; 0000 0501 //   DoTimes=times;
; 0000 0502 //   DoTypeLength=type_length;
; 0000 0503 }
;PCODE: $000005A6 VOL: 0
